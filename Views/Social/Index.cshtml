@model IEnumerable<cineVote.Models.Domain.Posts>

@{
    ViewData["Title"] = "Posts";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/emojionearea/3.4.2/emojionearea.min.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/emojionearea/3.4.2/emojionearea.min.js"></script>

<style>
    .comment-box {
        background-color: #f0f2f5;

        .comment-box {
            background-color: #f0f2f5;
            padding: 10px;
        }

        .comment {
            display: flex;
            align-items: flex-start;
        }

        .avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-right: 10px;
        }

        .comment-content {
            flex: 1;
        }

        .comment-author {
            margin: 0;
            font-size: 16px;
            font-weight: bold;
        }

        .comment-text {
            margin: 5px 0;
            font-size: 14px;
        }

        .comment-actions {
            font-size: 12px;
        }

        .comment-like,
        .comment-reply {
            margin-right: 10px;
            color: #666;
            cursor: pointer;
        }

        .comment-like:hover,
        .comment-reply:hover {
            text-decoration: underline;
        }

        .avatar {
            width: 40px;
            height: 40px;
            background-color: #ccc;
            border-radius: 50%;
            margin-right: 10px;
        }

        .comment-content {
            flex: 1;
        }

        .comment-author {
            margin: 0;
            font-size: 16px;
            font-weight: bold;
        }

        .comment-text {
            margin: 5px 0;
            font-size: 14px;
        }

        .comment-actions {
            font-size: 12px;
        }

        .comment-like,
        .comment-reply {
            margin-right: 10px;
            color: #666;
            cursor: pointer;
        }

        .comment-like:hover,
        .comment-reply:hover {
            text-decoration: underline;
        }

        #formStatus {
            position: fixed;
            bottom: 10px;
            right: 10px;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            display: none;
            /* Hide the div by default */
        }
</style>

<div class="margem-top">
    <div class="container mt-5 mb-5">
        <div class="card mb-3">
            <div class="card-body">
                <form id="post-form" method="post">
                    <div class="mb-3">
                        <label class="form-label fs-6 fw-bold text-dark">Title of the Post:</label>
                        <input type="text" name="Title" class="form-control"
                            placeholder="Write the Title of your post" />
                    </div>

                    <div class="mb-2 mt-3">
                        <label class="form-label fs-6 fw-bold text-dark">Content of the post:</label>
                        <textarea name="Content" class="form-control" placeholder="Write the Content" rows="1"
                            cols="50"></textarea>
                    </div>

                    <div class="mb-3 d-flex justify-content-center">
                        <button class="btn text-white" style="background-color:rgb(67,37,101)"
                            type="submit">Publish</button>
                    </div>
                </form>
            </div>
        </div>

        <div id="posts-container">

            @foreach (var item in Model)
            {
                <div class="card mb-3" id=@item.PostsId>
                    <div class="card-body">
                        <h5 class="card-title text-dark text-center">
                            <div class="alert alert-success mt-3 formStatus" style="display: none;">
                                Post edited!
                            </div>
                            @if (item.User.imageUrl != null)
                            {
                                string imageBase64 = Convert.ToBase64String(@item.User.imageUrl);
                                string imageSrc = $"data:image/jpeg;base64,{imageBase64}";
                                <img class="rounded-circle mt-5" src="@item.User.imageUrl" alt="User Avatar" />
                            }

                            <a href="@Url.Action("Profile", "User", new { username = item.userName })">@item.userName</a>
                            <a  id="postTitle-@item.PostsId" class="post-content">| @item.Title</a>

                            @if (@item.userName == User.Identity.Name)
                            {
                                <button class="btn text-white" style="background-color: rgb(67, 37, 101)"
                                    onclick="showEditForm('@item.PostsId')">Edit</button>
                                <div class="edit-form-container" style="display: none;">
                                    <form class="edit-form" method="post">
                                        <input type="hidden" id="editId" name="PostsId" value="@item.PostsId">
                                        <div class="mb-3">
                                            <label class="form-label fs-6 fw-bold text-dark">Title of the Post:</label>
                                            <input type="text" id="editTitle" name="Title" class="form-control" value="@item.Title" />
                                        </div>
                                        <div class="mb-2 mt-3">
                                            <label class="form-label fs-6 fw-bold text-dark">Content of the post:</label>
                                            <textarea name="Content" id="editContent" class="form-control" rows="1"
                                                cols="50">@item.Content</textarea>
                                        </div>
                                        <div class="mb-3 d-flex justify-content-center">
                                            <button class="btn text-white" style="background-color:rgb(67,37,101)"
                                                type="submit">Save</button>
                                            <button class="btn text-white" style="background-color: #888;"
                                                onclick="cancelEdit('@item.PostsId')">Cancel</button>
                                        </div>
                                    </form>
                                </div>
                            }
                        </h5>
                        <p class="fw-bold text-dark post-content">Content:</p>
                        <p class="card-text text-dark post-content" id="postContent-@item.PostsId"">@item.Content</p>

                        <p class="fw-bold text-dark">Comments:</p>
                        <div class="comments-section">
                            <div class="comments">
                                @foreach (var cc in item.Comments)
                                {
                                    if (cc != null)
                                    {
                                        <div class="comment-box">
                                            <div class="comment text-dark">
                                                @if (cc.User.imageUrl != null)
                                                {
                                                    string imageBase64 = Convert.ToBase64String(cc.User.imageUrl);
                                                    string imageSrc = $"data:image/jpeg;base64,{imageBase64}";
                                                    <img class="avatar" src="@cc.User.imageUrl" alt="User Avatar" />
                                                }
                                                else
                                                {
                                                    <img class="rounded-circle mt-5" width="150px"
                                                        src="https://st3.depositphotos.com/15648834/17930/v/600/depositphotos_179308454-stock-illustration-unknown-person-silhouette-glasses-profile.jpg">
                                                }

                                                <div class="comment-content">
                                                    <h4 class="comment-author">
                                                        <a
                                                            href="@Url.Action("Profile", "User", new { username = cc.userName })">@cc.userName</a>
                                                    </h4>
                                                    <p class="comment-text">@cc.Content</p>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                }
                            </div>

                            <!-- Comment form -->
                            <form class="comment-form" id="comment-form" method="post">
                                <input type="hidden" name="PostsId" value="@item.PostsId">
                                <textarea name="Content" class="form-control" placeholder="Write a comment" rows="1"
                                    cols="50"></textarea>
                                <div class="d-flex justify-content-center">
                                    <button type="submit" class="btn text-white mt-3"
                                        style="background-color: rgb(67, 37, 101)">Comment</button>
                                </div>
                            </form>
                                
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(function () {
            $(document).on('submit', '#post-form', function (event) {
                event.preventDefault(); // Prevent default form submission

                // Get form data
                var formData = $(this).serialize();

                // Send form data to the server using AJAX
                $.ajax({
                    url: '@Url.Action("Create", "Social")',
                    type: 'POST',
                    data: formData,
                    success: function (result) {
                        // Clear the form
                        $("#post-form")[0].reset();

                        // Create a new card element for the new post
                        var card = $("<div>").addClass("card mb-3");
                        var cardBody = $("<div>").addClass("card-body");
                        var cardTitle = $("<h5>").addClass("card-title text-dark");

                        // Create the user link
                        var userLink = $("<a>").attr("href", "@Url.Action("Profile", "User")/" + result.userName).text(result.userName);
                        cardTitle.append(userLink);

                        // Add the post title and content
                        cardTitle.append(" | " + result.title);
                        var cardContent = $("<p>").addClass("card-text text-dark").text(result.content);

                        // Append the card elements to the posts container
                        cardBody.append(cardTitle, cardContent);
                        card.append(cardBody);
                        // Insert the new post below the form
                        $("#posts-container").prepend(card);

                        // Create a comment form for the new post
                        var commentForm = $("<form>").addClass("comment-form");
                        var commentTextArea = $("<textarea>").addClass("form-control").attr("name", "Content").attr("placeholder", "Write a comment").attr("rows", "1").attr("cols", "50");
                        var commentButton = $("<button>").addClass("btn text-white").css("background-color", "rgb(67, 37, 101)").attr("type", "submit").text("Comment");

                        // Append comment form elements to the comments section
                        var commentsSection = $("<div>").addClass("comments-section");
                        commentsSection.append(commentForm);
                        commentForm.append(commentTextArea, commentButton);

                        cardBody.append(commentsSection);
                        // Scroll to the newly added post
                        $('html, body').animate({
                            scrollTop: card.offset().top
                        }, 500);

                        // Clear and focus on the comment form
                        $("#comment-form")[0].reset();
                        $("#comment-form textarea").focus();
                    },

                    error: function (xhr, status, error) {
                        console.log("DEU ERROR");
                        // Handle error
                        console.error(error);
                    }
                });
            });
        });

        $(function () {
            $(document).on('submit', '#comment-form', function (event) {
                event.preventDefault(); // Prevent default form submission

                // Get form data
                var formData = $(this).serialize();

                var commentForm = $(this);
                var cardBody = commentForm.closest('.card-body');
                var commentsSection = cardBody.find('.comments');
                // Send form data to the server using AJAX
                $.ajax({
                    url: '@Url.Action("Comment", "Social")',
                    type: 'POST',
                    data: formData,
                    success: function (result) {
                        // Clear the form
                        commentForm[0].reset();
                        $("#comment-form")[0].reset();

                        // Create a new comment element
                        var comment = $("<div>").addClass("comment");

                        // Create the user link
                        var userLink = $("<a>").attr("href", "@Url.Action("Profile", "User")/" + result.userName).text(result.userName);
                        var commentContent = $("<p>").addClass("comment-content text-dark").append(userLink).append(" | " + result.content);
                        comment.append(commentContent);

                        // Append the new comment to the comments section
                        commentsSection.prepend(comment);

                    },
                    error: function (xhr, status, error) {
                        console.error("ERROR: " + error);
                    }
                });
            });
        });

        function showEditForm(postId) {
            // Hide the post content and show the edit form
            $(`#${postId} .post-content`).hide();
            $(`#${postId} .edit-form-container`).show();
        }

        function cancelEdit(postId) {
            // Hide the edit form and show the post content
            $(`#${postId} .post-content`).show();
            $(`#${postId} .edit-form-container`).hide();
        }

        $(function () {
            // Your existing script for form submission goes here

            $(document).on('submit', '.edit-form', function (event) {
                event.preventDefault(); // Prevent default form submission

                // Get form data
                var formData = $(this).serialize();
                // Get the values of the Title and Content fields
                var title = $("#editTitle").val();
                var content = $("#editContent").val();
                var id = $("editId").val();

                // Send form data to the server using AJAX
                $.ajax({
                    url: '@Url.Action("EditPost", "Social")', // Change the URL to your edit action
                    type: 'POST',
                    data: formData,
                    success: function (result) {
                        // Update the post content with the edited data

                        
                        var postContent = $(`#postContent-${id}`).text();
                        var postTitle = $(`#postTitle-${id}`).text();

                        console.log("Content: " + postContent);
                        console.log("Title: " + postTitle);
                        cancelEdit(id);


                        const message = result.message;
                        $("#formStatus").text(message);
                        $("#formStatus").show();

                        // Remove the card after 5 seconds
                        setTimeout(function () {
                            $("#formStatus").hide();
                        }, 3000);
                    },
                    error: function (xhr, status, error) {
                        console.error("ERROR: " + error);
                    }
                });
            });
        });

    </script>
}