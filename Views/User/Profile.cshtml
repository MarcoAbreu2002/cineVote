@model cineVote.Models.Domain.User

@{
    ViewData["Title"] = "Profile";
}

<style>
    .margem-top {
        margin-top: 14%
    }

    .card {
        display: inline-block;
        max-width: 300px;
    }

    .card-img-top {
        display: block;
        margin: 0 auto;
    }
</style>


<body>
    <div class="margem-top">
        <div class="container rounded mt-5 mb-5 border">
            <div class="row text-secondary rounded bg-light ">
                <div class="col-md-3">
                    <div class="d-flex flex-column align-items-center text-center p-3 py-5">
                        <img class="rounded-circle mt-5" width="150px"
                            src="https://st3.depositphotos.com/15648834/17930/v/600/depositphotos_179308454-stock-illustration-unknown-person-silhouette-glasses-profile.jpg">
                        <span class="font-weight-bold fw-bold fs-5">@Model.UserName</span>
                    </div>
                </div>
                <div class="col-md-5 border-right">
                    <div class="p-3 py-5">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <h4 class="text-right fs-2">Profile</h4>
                        </div>
                        <div class="row mt-2">
                            <div class="col-md-6">
                                <label class="labels fw-bold fs-5 mt-3">Name:</label>
                                <span>@Model.FirstName</span>
                            </div>
                            <div class="col-md-12 mt-3">
                                <label class="labels fw-bold fs-5">Surname:</label>
                                <span>@Model.LastName</span>
                            </div>
                            <div class="col-md-12 mt-3">
                                <label class="labels fw-bold fs-5">Username:</label>
                                <span>@Model.UserName</span>
                            </div>
                            <div class="col-md-12 mt-3">
                                <label class="labels fw-bold fs-5">Email:</label>
                                <span>@Model.EmailAddress</span>
                            </div>
                            @if (@User.Identity.Name == @Model.UserName)
                            {
                                <div class="mt-5">
                                    <a class="btn text-white profile-button"
                                        href="/User/EditProfile?username=@Model.UserName"
                                        style="background-color:rgb(67,37,101)">
                                        <i class="bi bi-pen"></i> Edit Profile</a>
                                </div>
                                <p class="fw-bold fs-4">Following:</p>

                                <p>Following @Model.followings.Count() people</p>
                            }
                            else
                            {
                                @if (!Model.followings.Any(f => f.UserName == Model.UserName))
                                {
                                    <div class="mt-5">
                                        <a id="followButton" class="btn text-white profile-button"
                                            style="background-color:rgb(67,37,101)">
                                            <i class="bi bi-pen"></i> Follow</a>
                                    </div>
                                }
                                else
                                {
                                    <div class="mt-5">
                                        <a id="unfollowButton" class="btn text-white profile-button"
                                            style="background-color:rgb(67,37,101)">
                                            <i class="bi bi-pen"></i> UnFollow</a>
                                    </div>
                                }


                            }

                        </div>
                    </div>
                </div>
                <div class="col-md-4 bg-light border">
                    <div class="p-3 py-5 text-right">
                        <p class="fw-bold fs-4">Subscribed Competitions:</strong></p>
                        <ul>
                            @foreach (var subscription in Model.subscritions)
                            {
                                if (subscription != null)
                                {
                                    <li>
                                        <span>@subscription.Name</span>
                                        <div class="mt-2">
                                            <a class="btn btn-primary btn-sm"
                                                href="/User/Subscription?subscription=@subscription.SubscriptionId"
                                                style="background-color:rgb(67,37,101)">See More</a>
                                        </div>
                                    </li>
                                }
                                else
                                {
                                    <li>No subscriptions yet!</li>
                                }
                            }
                        </ul>
                    </div>
                </div>
                @if (Model.Movies.Count > 0)
                {
                    <hr>
                    <h2>Favorite Movies: </h2>
                    <div class="alert alert-success mt-3" id="favoriteStatus" style="display: none;">
                        Favorite Removed
                    </div>
                    <div class="row mt-3">
                        @foreach (var movie in Model.Movies)
                        {
                            var movieId = movie["Id"].ToString();
                            var movieTitle = movie["Title"].ToString();
                            var movieImagePath = movie["PosterPath"].ToString();
                            var movieOverview = movie["Overview"].ToString();
                            var releaseDate = movie["ReleaseDate"].ToString();
                            var baseUrl = "https://image.tmdb.org/t/p/";
                            var fileSize = "w300";
                            var imageUrl = $"{baseUrl}{fileSize}{movieImagePath}";
                            <div class="col-4">
                                <div class="card" data-movie-id="@movieId">
                                    <img src="@imageUrl" class="card-img-top" alt="Movie Poster"
                                        style="width: 100px; height: auto;">
                                    <div class="card-body">
                                        <h5 class="card-title">@movieTitle</h5>
                                        <form action="/Competition/ShowMoreDetails" method="post">
                                            <input type="hidden" name="movieId" value="@movieId" />
                                            <button class="btn text-white profile-button" type="submit"
                                                style="background-color:rgb(67,37,101)">More Details</button>
                                        </form>
                                        <form action="/Competition/RemoveFavorite" method="post" id="removeFavoriteForm">
                                            <input type="hidden" name="movieId" value="@movieId" />
                                            <button class="btn text-white profile-button" type="submit"
                                                style="background-color:rgb(67,37,101)">
                                                Remove Favorite
                                            </button>
                                        </form>

                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>

        </div>
    </div>
</body>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $("#followButton").click(function (e) {
            e.preventDefault(); // Prevent the default form submission

            // Send an AJAX request to the server
            $.ajax({
                url: "/User/Follow",
                method: "POST",
                data: { userIdToFollow: "@Model.Id" }, // Pass the required data, adjust as needed
                success: function (response) {
                    // Handle the success response if needed
                    // For example, update the UI to reflect the successful follow action
                },
                error: function (error) {
                    // Handle the error if needed
                    // For example, display an error message
                    console.log(error);
                }
            });
        });
        $("#unfollowButton").click(function (e) {
            e.preventDefault(); // Prevent the default form submission

            // Send an AJAX request to the server
            $.ajax({
                url: "/User/Unfollow",
                method: "POST",
                data: { userIdToUnFollow: "@Model.Id" }, // Pass the required data, adjust as needed
                success: function (response) {
                    // Handle the success response if needed
                    // For example, update the UI to reflect the successful follow action
                },
                error: function (error) {
                    // Handle the error if needed
                    // For example, display an error message
                    console.log(error);
                }
            });
        });
    });
    $(function () {
        $(document).on('submit', '#removeFavoriteForm', function (event) {
            event.preventDefault(); // Prevent default form submission

            var formData = $(this).serialize();
            $.ajax({
                url: '@Url.Action("RemoveFavorite", "Competition")',
                type: 'POST',
                data: formData,
                success: function (response) {
                    // Handle the success response
                    // For example, update the UI to reflect the successful remove action
                    const message = response.message;
                    $("#favoriteStatus").text(message);
                    $("#favoriteStatus").show();

                    // Remove the card after 5 seconds
                    setTimeout(function () {
                        $("#favoriteStatus").hide();
                    }, 4000);

                    // Find the parent container of the removed card by data-movie-id
                    var movieId = getMovieIdFromFormData(formData);
                    var cardToRemove = $(`[data-movie-id="${movieId}"]`);

                    // Remove the card from the DOM
                    cardToRemove.remove();
                },
                error: function (error) {
                    // Handle the error if needed
                    // For example, display an error message
                    console.log(error);
                }
            });
        });

        // Function to extract the movieId from the serialized form data
        function getMovieIdFromFormData(formData) {
            var formDataArray = formData.split('&');
            for (var i = 0; i < formDataArray.length; i++) {
                var pair = formDataArray[i].split('=');
                if (pair[0] === 'movieId') {
                    return pair[1];
                }
            }
            return null; // Return null if movieId not found
        }
    });


</script>
